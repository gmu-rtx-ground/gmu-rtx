name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  filter:
      runs-on: ubuntu-latest
      outputs:
        amd64_changed: ${{ steps.filter.outputs.amd64_changed }}
        arm64_changed: ${{ steps.filter.outputs.arm64_changed }}
        code_changed: ${{ steps.filter.outputs.code_changed }}
      steps:
        - uses: actions/checkout@v4.2.2
        - name: Check which Dockerfile(s) changed
          id: filter
          uses: dorny/paths-filter@v3
          with:
            filters: |
              amd64_changed:
                - 'docker/Dockerfile.amd64'
              arm64_changed:
                - 'docker/Dockerfile.arm64'
              code_changed:
                - 'Arduino/*'
                - 'python/*'
                - 'ROS/*'
  build:
    needs: filter
    if: > 
      (needs.filter.outputs.amd64_changed == 'true' || needs.filter.outputs.arm64_changed == 'true')
      || needs.filter.outputs.code_changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up QEMU
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3.4.0
        with:
          platforms: linux/arm64
      
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3.9.0
        with:
          platforms: linux/${{ matrix.arch }}
      
      - name: Login to GHCR
        uses: docker/login-action@v3.3.0
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.DOCKER_PAT }}

      - name: Start SSH agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Build & push ${{ matrix.arch }} image
        if: >
          (matrix.arch == 'amd64' && needs.filter.outputs.amd64_changed == 'true')
          || (matrix.arch == 'arm64' && needs.filter.outputs.arm64_changed == 'true')
          || needs.filter.outputs.code_changed == 'true'
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          file: docker/Dockerfile.${{ matrix.arch }}
          push: true
          platforms: linux/${{ matrix.arch }}
          ssh: default
          tags: ghcr.io/${{ github.repository }}:${{ matrix.arch }}

  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Login to GHCR
        uses: docker/login-action@v3.3.0
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.DOCKER_PAT }}

      - name: Create and push multi-platform manifest
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:amd64 \
            ghcr.io/${{ github.repository }}:arm64
